---
import type { BlogPost } from '../utils/posts';

interface Props {
  post: BlogPost;
  translationHref?: string;
  Content: any;
  headings: { depth: number; text: string; slug: string }[];
  adjacent?: {
    previous?: BlogPost;
    next?: BlogPost;
  };
}

const { post, translationHref, Content, headings = [], adjacent } = Astro.props;
---
<article class="prose prose-invert mx-auto w-full max-w-3xl">
  <header class="mb-12 flex flex-col gap-6">
    <div class="flex items-center gap-3 text-xs uppercase tracking-[0.35em] text-muted">
      <time datetime={post.publishDate.toISOString()}>{post.formattedDate}</time>
      <span aria-hidden="true" class="h-1 w-1 rounded-full bg-border"></span>
      <span>{post.lang === 'zh' ? '更新日志' : 'Changelog'}</span>
      {translationHref && (
        <a href={translationHref} class="ml-auto text-accent transition hover:text-highlight">
          {post.lang === 'zh' ? 'English' : '中文'}
        </a>
      )}
    </div>
    <h1 class="text-4xl font-semibold text-surface md:text-5xl">{post.title}</h1>
    {post.description && <p class="text-base text-muted">{post.description}</p>}
    {post.tags.length > 0 && (
      <div class="flex flex-wrap items-center gap-2 text-xs uppercase tracking-[0.28em] text-muted">
        {post.tags.map((tag) => (
          <span class="rounded-full border border-border px-3 py-1">{tag}</span>
        ))}
      </div>
    )}
  </header>
  {post.image && (
    <figure class="mb-12 overflow-hidden rounded-3xl border border-border/60">
      <img src={post.image} alt={post.title} class="w-full object-cover" loading="eager" />
    </figure>
  )}
  <Content />
</article>

{headings.length > 4 && (
  <aside class="mx-auto mt-16 w-full max-w-3xl rounded-3xl border border-border/60 bg-card/60 p-6">
    <h2 class="mb-4 text-xs uppercase tracking-[0.35em] text-muted">{post.lang === 'zh' ? '目录' : 'In This Story'}</h2>
    <ul class="space-y-2 text-sm text-muted">
      {headings
        .filter((heading) => heading.depth === 2 || heading.depth === 3)
        .map((heading) => (
          <li class={heading.depth === 3 ? 'pl-4' : undefined}>
            <a href={`#${heading.slug}`} class="transition hover:text-accent">
              {heading.text}
            </a>
          </li>
        ))}
    </ul>
  </aside>
)}

{adjacent && (adjacent.previous || adjacent.next) && (
  <nav class="mx-auto mt-16 flex w-full max-w-3xl flex-col gap-6 md:flex-row md:gap-8">
    {adjacent.previous && (
      <a href={adjacent.previous.url} class="group flex-1 rounded-3xl border border-border/60 bg-card/60 p-6 transition hover:border-accent">
        <span class="text-xs uppercase tracking-[0.35em] text-muted">{post.lang === 'zh' ? '上一篇' : 'Previous'}</span>
        <p class="mt-3 text-lg font-semibold text-surface transition group-hover:text-accent">{adjacent.previous.title}</p>
      </a>
    )}
    {adjacent.next && (
      <a href={adjacent.next.url} class="group flex-1 rounded-3xl border border-border/60 bg-card/60 p-6 text-right transition hover:border-accent">
        <span class="text-xs uppercase tracking-[0.35em] text-muted">{post.lang === 'zh' ? '下一篇' : 'Next'}</span>
        <p class="mt-3 text-lg font-semibold text-surface transition group-hover:text-accent">{adjacent.next.title}</p>
      </a>
    )}
  </nav>
)}
